}
tmp <- read.csv("sider-all-se.csv")
# remove PubChem CID prefix "CID0...0"
tmp[, 2] <- apply(tmp[, 2, drop = FALSE], 2, function(x) { gsub("CID0+", "", x) })
tmp[, 2] <- as.numeric(tmp[, 2])
# remove duplicate side effects and sort data in alphabetical order for later use as column names
pheno_name <- sort(unique(tmp[, 6]))
pheno <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(pheno_name)))
row.names(pheno) <- rownames(chem)
colnames(pheno) <- pheno_name
for(i in 1:nrow(tmp)) {
row_index <- which(rownames(pheno) == tmp[i, 2])
col_index <- which(colnames(pheno) == tmp[i, 6])
# ensure side effect associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0)
pheno[row_index, col_index] <- 1
}
pheno[587, ]
any(pheno[587, ] == 1)
which(pheno[587, ] == 1)
pheno[587, ] == 1
which(pheno[587, ] == 1)
pheno[587, 20]
pheno[587, 70:71]
read.csv("drugbank_all_target.csv")
tmp <- read.csv("drugbank_all_target.csv")
rm(sdfset)
rm(valid)
rm(x)
rm(row_index)
rm(col_index)
rm(fpset)
rm(i)
rm(j)
tmp[1,]
tmp[1:5, 6]
tmp[1:5, 6:7]
length(tmp[, 7])
length(unique(tmp[, 7]))
duplicated(tmp[, 7])
which(duplicated(tmp[, 7]))
tmp[2239, 7]
col_name <- sort(unique(tmp[, 7]))
col_name
target <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
tmp[1, 12:13]
tmp[1, 13]
strsplit(tmp[1, 13], ";")
strsplit(tmp[1, 13], "; ")
strsplit(as.character(tmp[1, 13]), "; ")
strsplit(as.character(tmp[1, 13]), ";")
strsplit(as.character(tmp[1, 13]), ";.")
strsplit(as.character(tmp[1, 13]), ";+")
strsplit(as.character(tmp[1, 13]), ";.")
strsplit(as.character(tmp[1, 13]), ";*")
strsplit(as.character(tmp[1, 13]), ";.")
links <- read.csv("drugbank_all_drug_links.csv")
links[1,]
tmp[1, 7]
tmp[1, 7:8]
links[1, 1:2]
links[1, 7L8]
links[1, 7:8]
length(links[, 1])
length(unique(links[, 1]))
strsplit(as.character(tmp[1, 13]), ";.")[1]
strsplit(as.character(tmp[1, 13]), ";.")[[1]]
class(strsplit(as.character(tmp[1, 13]), ";."))
strsplit(as.character(tmp[1, 13]), ";.")[[1]]
strsplit(as.character(tmp[1, 13]), ";.")[[1]][1]
strsplit(as.character(tmp[1, 13]), ";.")[[2]][1]
strsplit(as.character(tmp[1, 13]), ";.")[[1]][2]
unlist(strsplit(as.character(tmp[1, 13]), ";."))
unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]
unlist(strsplit(as.character(tmp[1, 13]), ";."))[2]
which(rownames(links[1, ]) == (unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]))
links[1, 12:2]
links[1, 1:2]
links[1, 1]
class(links[1, 1])
which(as.character(rownames(links[1, ])) == (unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]))
links[1, 1] == "DB00001"
which(rownames(links[1, ]) == (unlist(strsplit(as.character(tmp[1, 13]), ";."))[2]))
which(links[1, ] == (unlist(strsplit(as.character(tmp[1, 13]), ";."))[2]))
which(links[1, ] == (unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]))
(unlist(strsplit(as.character(tmp[1, 13]), ";."))[1])
unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]
which(links[1, ] == unlist(strsplit(as.character(tmp[1, 13]), ";."))[1])
which(links[1, ]) == "DB00001"
which(links[1, ] == "DB00001")
which(links[1, ] == "DB00114")
which(links[, 1] == unlist(strsplit(as.character(tmp[1, 13]), ";."))[1])
which(links[, 1] == unlist(strsplit(as.character(tmp[1, 13]), ";."))[2])
links[which(links[, 1] == unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]), 7]
target[1:5, 1:%]
target[1:5, 1:5]
colnames(target) <- colnames(chem)
rownames(target) <- rownames(chem)
colnames(target) <- colnames(col_name)
target[1:5, 1:5]
col_name <- sort(unique.array(tmp[, 7]))
col_name <- sort(unique(tmp[, 7]))
colnames(target) <- colnames(col_name)
target[1:5, 1:5]
col_name[1:5]
colnames(target)[1:4]
colnames(target) <- col_name
target[1:5, 1:5]
class(unlist(strsplit(as.character(tmp[1, 13]), ";."))[1]))
class(unlist(strsplit(as.character(tmp[1, 13]), ";.")))
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(target) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(target) == pubchem_cid)
# ensure target associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0)
target[row_index, col_index] <- 1
}
}
target[1:5, 1:5]
target[1]
target[, 2]
target[, 1]
target[2]
target[3]
target[1:5, 1:5]
target <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(target) <- rownames(chem)
colnames(target) <- col_name
target[1:5, 1:5]
chem[1:5, 1:%]
chem[1:5, 1:5]
links[1:5, 1:5]
pheno[1:5, 1:5]
pheno[1:2, 1]
pheno[1:2, 1:2]
col_name[1:5]
col_name <- sort(unique(tmp[, 7]))
col_name[1:5]
col_name[1]
class(col_name[1])
tmp <- read.csv("drugbank_all_target.csv")
links <- read.csv("drugbank_all_drug_links.csv")
# remove duplicate Uniprot title and sort data in alphabetical order for later use as column names
col_name <- sort(unique(tmp[, 7]))
target <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(target) <- rownames(chem)
colnames(target) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(target) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(target) == pubchem_cid)
# ensure target associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0)
target[row_index, col_index] <- 1
}
}
target[1:5, 1:5]
which(target[, 1] == 1051)
which(rownames(target) == 1051)
which(rownames(target) == 44176380)
which(rownames(target) == 91443)
which(rownames(target) == 119)
which(rownames(target) == 305)
which(rownames(target) == 750)
which(target[21, ] == 1)
target[21, ]
which(colnames(target) == "GLRB_HUMAN")
any(target[, 856] == 1)
any(target == 1)
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
drugbank_ids <- unlist(strsplit(as.character(tmp[1, 13]), ";."))
drugbank_ids
links_row_index <- which(links[, 1] == drugbank_ids[1])
links_row_index
links[109, 7]
which(rownames(target) == 1051)
rownames(target)[1]
rownames(target)[2]
rownames(target)[3]
which(rownames(target) == 119)
which(rownames(target) == 137)
unlist(strsplit(as.character(tmp[1, 13]), ";."))
unlist(strsplit(as.character(tmp[2, 13]), ";."))
unlist(strsplit(as.character(tmp[3, 13]), ";."))
which(links[, 1] == "DB00142")
links[136, 7]
which(colnames(target) == "A1AG1_HUMAN")
which(rownames(target) == 1065)
which(rownames(target) == 2726)
which(links[, 1] == drugbank_ids[j])
pubchem_cid
pubchem_cid <- links[109, 7]
pubchem_cid
links_row_index <- which(links[, 1] == drugbank_ids[j])
pubchem_cid <- links[links_row_index, 7]
links_row_index
pubchem_cid
which(rownames(target) == pubchem_cid)
which(rownames(target) == as.numeric(pubchem_cid))
which(as.numeric(rownames(target)) == pubchem_cid)
drugbank_ids <- unlist(strsplit(as.character(tmp[2299, 13]), ";."))
drugbank_ids
# manually combine all the data sets into bio in excel
tmp <- read.csv("drugbank_all_bio.csv")
links <- read.csv("drugbank_all_drug_links.csv")
# remove duplicate Uniprot title and sort data in alphabetical order for later use as column names
col_name <- sort(unique(tmp[, 7]))
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0)
target[row_index, col_index] <- 1
}
}
# manually combine all the data sets into bio in excel
tmp <- read.csv("drugbank-all-bio.csv")
links <- read.csv("drugbank-all-drug-links.csv")
# remove duplicate Uniprot title and sort data in alphabetical order for later use as column names
col_name <- sort(unique(tmp[, 7]))
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0)
bio[row_index, col_index] <- 1
}
}
bio[1:5, 1:5]
any(bio == 1)
# manually combine all the data sets into bio in excel
tmp <- read.csv("drugbank_all_bio.csv")
links <- read.csv("drugbank_all_drug_links.csv")
# remove duplicate Uniprot title and sort data in alphabetical order for later use as column names
col_name <- sort(unique(tmp[, 7]))
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0)
bio[row_index, col_index] <- 1
}
}
any(bio == 1)
any(chem == 1)
which(rownames(bio) == 2153)
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
paste("drugbank_ids: ", drugbank_ids)
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
paste("links_row_index: ", links_row_index)
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
paste("row_index: ", row_index)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0){
bio[row_index, col_index] <- 1
print("YES!")
} else {
print("NO")
}
}
}
bio
any(bio == 1)
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
paste("drugbank_ids: ", drugbank_ids)
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
paste("links_row_index: ", links_row_index)
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
paste("row_index: ", row_index)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0){
bio[row_index, col_index] <- 1
print("YES!")
} else {
print("NO")
}
}
}
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
paste0("drugbank_ids: ", drugbank_ids)
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
paste0("links_row_index: ", links_row_index)
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
paste0("row_index: ", row_index)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0){
bio[row_index, col_index] <- 1
print("YES!")
} else {
print("NO")
}
}
}
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
paste0("drugbank_ids: ", drugbank_ids)
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
paste0("links_row_index: ", links_row_index)
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
paste0("row_index: ", row_index)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0){
bio[row_index, col_index] <- 1
print("YES!")
} else {
print("NO")
}
}
}
# remove duplicate Uniprot title and sort data in alphabetical order for later use as column names
col_name <- sort(unique(tmp[, 7]))
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 6])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
paste("drugbank_ids: ", drugbank_ids)
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
paste("links_row_index: ", links_row_index)
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
paste("row_index: ", row_index)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0){
bio[row_index, col_index] <- 1
bio[row_index, col_index]
print("YES!")
} else {
print("NO")
}
}
}
bio[row_index, col_index]
bio
bio[1, 1]
row_index
col_index
col_index <- which(colnames(bio) == tmp[i, 6])
which(colnames(bio) == tmp[i, 6])
tmp[i, 6]
# manually combine all the data sets into drugbank-all-bio.csv in excel
tmp <- read.csv("drugbank_all_bio.csv")
links <- read.csv("drugbank_all_drug_links.csv")
# remove duplicate Uniprot title and sort data in alphabetical order for later use as column names
col_name <- sort(unique(tmp[, 7]))
bio <- as.data.frame(matrix(0, nrow = nrow(chem), ncol = length(col_name)))
rownames(bio) <- rownames(chem)
colnames(bio) <- col_name
for(i in 1:nrow(tmp)) {
col_index <- which(colnames(bio) == tmp[i, 7])
# split string of DrugBank IDs into vector
drugbank_ids <- unlist(strsplit(as.character(tmp[i, 13]), ";."))
paste("drugbank_ids: ", drugbank_ids)
for(j in 1:length(drugbank_ids)) {
# find PubChem CID associated with DrugBank ID
links_row_index <- which(links[, 1] == drugbank_ids[j])
paste("links_row_index: ", links_row_index)
pubchem_cid <- links[links_row_index, 7]
row_index <- which(rownames(bio) == pubchem_cid)
paste("row_index: ", row_index)
# ensure bio associated PubChem CID exists in chemical fingerprints data set
if(length(row_index) != 0){
bio[row_index, col_index] <- 1
bio[row_index, col_index]
print("YES!")
} else {
print("NO")
}
}
}
which(colnames(bio) == tmp[i, 6])
tmp[i, 7]
any(bio == 1)
paste("col_index:", col_index)
rm(target)
rm(tmp)
rm(col_index)
rm(col_name)
rm(drugbank_ids)
rm(i)
rm(j)
rm(links_row_index)
rm(pheno_name)
rm(pubchem_cid)
rm(row_index)
sum(bio)
sum(chem)
sum(pheno)
write.csv(chem, "chem.csv")
write.csv(pheno, "pheno.csv")
write.csv(bio, "bio.csv")
rm(links)
colSums(bio) != 0
bio[colSums(bio) != 0]
which(colSums(bio) != 0)
bio[, colSums(bio) != 0]
colSums(bio) != 0
(colSums(bio) != 0)[1]
(colSums(bio) == 0)[1]
(colSums(bio) == 0)[2]
(colSums(bio) == 0)[3]
(colSums(bio) == 0)[4]
(colSums(bio) == 0)[5]
(colSums(bio) == 0)[1:5]
bio[(colSums(bio) == 0)[1:5]]
bio[1:5, (colSums(bio) == 0)[1:5]]
colSums(bio) == 0
class(colSums(bio) == 0)
which(colSums(bio) == 0)
which(colSums(bio) == 0)[1]
which(colSums(bio) == 0)[2]
bio[, which(colSums(bio) != 0)]
bio[, which(colSums(bio) == 0)]
bio[, -which(colSums(bio) == 0)]
bio_cleaned <- bio[, -which(colSums(bio) == 0)]
count(colSums(bio) == 0)
length(colSums(bio) == 0)
sum(which(colSums(bio) == 0))
length(which(colSums(bio) == 0))
chem_cleaned <- bio[, -which(colSums(chem) == 0)]
rm(chem_cleaned)
chem_cleaned <- chem[, -which(colSums(chem) == 0)]
pheno_cleaned <- pheno[, -which(colSums(pheno) == 0)]
which(rowSums(chem) == 0)
which(rowSums(pheno) == 0)
which(rowSums(bio) == 0)
length(which(rowSums(bio) == 0))
which(rowSums(chem) == 0)
which(rowSums(pheno) == 0)
length(which(rowSums(bio) == 0))
bio_cleaned <- bio_cleaned[-which(rowSums(bio_cleaned) == 0),]
removed_index <- which(rowSums(bio) == 0)
removed_index[1:5]
which(rowSums(bio) == 0)[1:5]
which(rowSums(bio) == 0)[1]
chem_cleaned <- chem_cleaned[-removed_index,]
pheno_cleaned <- pheno_cleaned[-removed_index,]
write.csv(bio_cleaned, "bio-cleaned.csv")
write.csv(chem_cleaned, "chem-cleaned.csv")
write.csv(pheno_cleaned, "pheno-cleaned.csv")
rm(removed_index)
